apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: elephants-nodejs-mongodb
  annotations:
    serviceclaims.supplychain.apps.x-tanzu.vmware.com/extensions: '{"kind":"ServiceClaimsExtension","apiVersion":"supplychain.apps.x-tanzu.vmware.com/v1alpha1","spec":{"serviceClaims":{"mongodb-database-not-used":{"namespace":"mongodb"}}}}'
    autoscaling.knative.dev/minScale: "1"
  labels:
    apps.tanzu.vmware.com/workload-type-x: custom-server
    apps.tanzu.vmware.com/workload-type: web
    apps.tanzu.vmware.com/has-tests: "true"
    app.kubernetes.io/name: elephants
    app.kubernetes.io/part-of: micropets-app
    micropets/kind: backend
spec:
  serviceAccountName: tap-default
  source:
    git:
      url: https://github.com/bmoussaud/micropets-elephants
      ref:
        branch: main
  serviceClaims:
    - name: app-config
      ref:
        apiVersion: v1
        kind: Secret
        name: elephants-configuration
    - name: mongodb-database
      ref:
        apiVersion: v1
        kind: Secret
        name: micropets-mongodb-k8s-credentials
  params:
    - name: fqdn
      value: www.dev-tap.tap3.eu.aks.mytanzu.xyz
    - name: testing_pipeline_matching_labels
      value:
        apps.tanzu.vmware.com/pipeline: skip-test
    - name: scanning_source_policy
      value: scan-policy-nodejs-mongodb
    - name: scanning_image_policy
      value: scan-policy-nodejs-mongodb
    - name: userId
      value: 1001
